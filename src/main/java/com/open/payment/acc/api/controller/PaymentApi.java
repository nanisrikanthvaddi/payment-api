/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.open.payment.acc.api.controller;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.open.payment.acc.api.model.PaymentRequest;
import io.swagger.annotations.*;
 import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.context.request.NativeWebRequest;

import javax.validation.Valid;
import java.util.Optional;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-06-20T19:05:40.251343300+08:00[Asia/Singapore]")
@Validated
@Api(value = "payment", description = "the payment API")
public interface PaymentApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /payment : Create payment
     * The payment instructions with creditors list.
     *
     * @param paymentRequest Created payment request (required)
     * @return payment process successfully (status code 204)
     *         or Invalid payment Instructions (status code 400)
     *         or successful operation (status code 200)
     */
    @ApiOperation(value = "Create payment", nickname = "createPayment", notes = "The payment instructions with creditors list.", tags={ "PaymentRequest", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "payment process successfully"),
        @ApiResponse(code = 400, message = "Invalid payment Instructions"),
        @ApiResponse(code = 200, message = "successful operation") })
    @PostMapping(
        value = "/payment",
        consumes = { "application/json" }
    )
    public   ResponseEntity<Void> createPayment(@ApiParam(value = "Created payment request" ,required=true )  @Valid @RequestBody PaymentRequest paymentRequest) throws JsonProcessingException;


}
